import streamlit as st
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline

# üîπ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏£‡∏Ñ + ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£
data = {
    'symptoms': [
        '‡πÑ‡∏≠ ‡πÄ‡∏à‡πá‡∏ö‡∏Ñ‡∏≠ ‡∏°‡∏µ‡πÑ‡∏Ç‡πâ',
        '‡πÑ‡∏Ç‡πâ‡∏™‡∏π‡∏á ‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß ‡∏ú‡∏∑‡πà‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô ‡∏≠‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏•‡∏µ‡∏¢',
        '‡πÑ‡∏≠‡πÅ‡∏´‡πâ‡∏á ‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡∏≥‡∏ö‡∏≤‡∏Å ‡πÑ‡∏Ç‡πâ‡∏™‡∏π‡∏á',
        '‡πÑ‡∏≠ ‡πÄ‡∏à‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å ‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢ ‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡πÄ‡∏£‡πá‡∏ß',
        '‡∏à‡∏≤‡∏° ‡∏Ñ‡∏±‡∏î‡∏à‡∏°‡∏π‡∏Å ‡∏ô‡πâ‡∏≥‡∏°‡∏π‡∏Å‡πÑ‡∏´‡∏• ‡∏Ñ‡∏±‡∏ô‡∏ï‡∏≤',
        '‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏´‡∏≠‡∏ö ‡πÅ‡∏ô‡πà‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å ‡πÑ‡∏≠‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á',
        '‡∏õ‡∏ß‡∏î‡∏ó‡πâ‡∏≠‡∏á ‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏´‡∏•‡∏ß ‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ',
        '‡∏õ‡∏ß‡∏î‡∏ó‡πâ‡∏≠‡∏á ‡∏ñ‡πà‡∏≤‡∏¢‡∏ö‡πà‡∏≠‡∏¢ ‡∏°‡∏µ‡πÑ‡∏Ç‡πâ ‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô',
        '‡∏õ‡∏ß‡∏î‡∏ó‡πâ‡∏≠‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏Ñ‡∏∑‡∏ô ‡πÅ‡∏ô‡πà‡∏ô‡∏ó‡πâ‡∏≠‡∏á ‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ',
        '‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß ‡∏Ñ‡∏±‡∏î‡∏à‡∏°‡∏π‡∏Å ‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡∏ß‡∏° ‡∏ô‡πâ‡∏≥‡∏°‡∏π‡∏Å‡πÑ‡∏´‡∏•‡∏Ç‡πâ‡∏ô',
        '‡πÑ‡∏Ç‡πâ‡∏™‡∏π‡∏á ‡∏õ‡∏ß‡∏î‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠ ‡∏õ‡∏ß‡∏î‡∏Ç‡πâ‡∏≠',
        '‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ ‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô ‡∏õ‡∏ß‡∏î‡∏ó‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
        '‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ï‡πà‡∏≥ ‡πÄ‡∏´‡∏á‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å ‡πÉ‡∏à‡∏™‡∏±‡πà‡∏ô',
        '‡∏ö‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≤ ‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢‡∏á‡πà‡∏≤‡∏¢ ‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡∏≥‡∏ö‡∏≤‡∏Å',
        '‡∏°‡∏∑‡∏≠‡πÄ‡∏ó‡πâ‡∏≤‡∏ä‡∏≤ ‡∏≠‡πà‡∏≠‡∏ô‡πÅ‡∏£‡∏á ‡∏û‡∏π‡∏î‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î',
        '‡πÑ‡∏Ç‡πâ‡∏ï‡πà‡∏≥ ‡πÄ‡∏à‡πá‡∏ö‡∏Ñ‡∏≠ ‡∏ï‡πà‡∏≠‡∏°‡∏ô‡πâ‡∏≥‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡πÇ‡∏ï',
        '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏î‡∏á ‡∏•‡∏≠‡∏Å‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á ‡∏°‡∏µ‡πÑ‡∏Ç‡πâ',
        '‡∏ï‡∏≤‡πÅ‡∏î‡∏á ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡πÑ‡∏´‡∏• ‡∏Ñ‡∏±‡∏ô‡∏ï‡∏≤',
        '‡∏ñ‡πà‡∏≤‡∏¢‡πÄ‡∏´‡∏•‡∏ß ‡∏õ‡∏ß‡∏î‡∏ó‡πâ‡∏≠‡∏á ‡∏°‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏õ‡∏ô',
        '‡πÑ‡∏≠‡πÄ‡∏£‡∏∑‡πâ‡∏≠‡∏£‡∏±‡∏á ‡πÄ‡∏™‡∏°‡∏´‡∏∞‡∏°‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏•‡∏î'
    ],
    'disease': [
        '‡πÑ‡∏Ç‡πâ‡∏´‡∏ß‡∏±‡∏î',
        '‡πÑ‡∏Ç‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å',
        '‡πÇ‡∏Ñ‡∏ß‡∏¥‡∏î',
        '‡∏õ‡∏≠‡∏î‡∏ö‡∏ß‡∏°',
        '‡∏†‡∏π‡∏°‡∏¥‡πÅ‡∏û‡πâ',
        '‡∏´‡∏≠‡∏ö‡∏´‡∏∑‡∏î',
        '‡∏ó‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢',
        '‡∏•‡∏≥‡πÑ‡∏™‡πâ‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö',
        '‡∏Å‡∏£‡∏∞‡πÄ‡∏û‡∏≤‡∏∞‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö',
        '‡πÑ‡∏ã‡∏ô‡∏±‡∏™‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö',
        '‡∏ä‡∏¥‡∏Ñ‡∏∏‡∏ô‡∏Å‡∏∏‡∏ô‡∏¢‡∏≤',
        '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡∏©',
        '‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô (‡∏†‡∏≤‡∏ß‡∏∞‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ï‡πà‡∏≥)',
        '‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß',
        '‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏™‡∏°‡∏≠‡∏á',
        '‡∏Ñ‡∏≠‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö',
        '‡πÇ‡∏£‡∏Ñ‡∏°‡∏∑‡∏≠‡πÄ‡∏ó‡πâ‡∏≤‡∏õ‡∏≤‡∏Å',
        '‡πÄ‡∏¢‡∏∑‡πà‡∏≠‡∏ö‡∏∏‡∏ï‡∏≤‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö',
        '‡∏ö‡∏¥‡∏î',
        '‡∏ß‡∏±‡∏ì‡πÇ‡∏£‡∏Ñ'
    ]
}

# üîπ ‡∏ù‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•
df = pd.DataFrame(data)
model = Pipeline([
    ('vectorizer', CountVectorizer()),
    ('classifier', MultinomialNB())
])
model.fit(df['symptoms'], df['disease'])

# üî∫ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏£‡∏Ñ‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢
urgent_list = [
    '‡πÇ‡∏Ñ‡∏ß‡∏¥‡∏î', '‡∏õ‡∏≠‡∏î‡∏ö‡∏ß‡∏°', '‡πÑ‡∏Ç‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å', '‡∏•‡∏≥‡πÑ‡∏™‡πâ‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö',
    '‡∏ö‡∏¥‡∏î', '‡πÇ‡∏£‡∏Ñ‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏™‡∏°‡∏≠‡∏á', '‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß', '‡∏ß‡∏±‡∏ì‡πÇ‡∏£‡∏Ñ'
]

# üîπ UI ‡∏î‡πâ‡∏ß‡∏¢ Streamlit
st.set_page_config(page_title="‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏£", layout="centered")

st.title("ü©∫ ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢")
st.write("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô `‡πÑ‡∏≠ ‡πÄ‡∏à‡πá‡∏ö‡∏Ñ‡∏≠ ‡∏°‡∏µ‡πÑ‡∏Ç‡πâ`")

user_input = st.text_area("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", height=100)

if st.button("‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏£"):
    if user_input.strip() == "":
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô")
    else:
        prediction = model.predict([user_input])[0]
        st.success(f"‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô: **{prediction}**")
        
        if prediction in urgent_list:
            st.error("‚ö†Ô∏è ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ç‡πà‡∏≤‡∏¢‡πÇ‡∏£‡∏Ñ‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á ‡∏Ñ‡∏ß‡∏£‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÇ‡∏î‡∏¢‡∏î‡πà‡∏ß‡∏ô")
        else:
            st.info("‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á ‡∏≠‡∏≤‡∏à‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠")